name: Release
on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        description: Choose release type
        options:
          - auto
          - patch
          - minor
          - major
        default: auto

env:
  PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  OKTETO_REGISTRY: registry.cloud.okteto.net
  OKTETO_IMAGE_TAG: registry.cloud.okteto.net/gotreasa/gotreasa-berlin-clock:latest

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Setup Node version
        uses: actions/setup-node@main
        with:
          node-version: 18.16
          cache: 'npm'
      - name: Install the dependencies
        run: |
          npm ci
          touch .env
      - name: Log in to Okteto Container Registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.OKTETO_REGISTRY }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.OKTETO_TOKEN }}

      - name: Pull the container image for testing
        run: docker pull ${{ env.OKTETO_IMAGE_TAG }}

      - name: Install Inspec
        run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec
      - name: Initialise Git user
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: üöì Generate SBOM
        run: |
          echo "üîå Install Anchore/Syft"
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          echo "üìÅ catalogue the versions inside the container..."
          syft ${{ env.OKTETO_IMAGE_TAG }} --scope all-layers -o text=/tmp/syft/sbom.txt -o spdx-json=/tmp/syft/sbom.spdx.json -o cyclonedx-json=/tmp/syft/sbom.cyclonedx.json -o json=/tmp/syft/sbom.json -o table
      - name: Run release
        env:
          TYPE_ARG: ${{ fromJSON('{"auto":"", "patch":"--patch", "minor":"--minor", "major":"--major"}')[github.event.inputs.type] }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release -- --ci --verbose $TYPE_ARG
