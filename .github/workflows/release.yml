name: Release
on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        description: Choose release type
        options:
          - auto
          - patch
          - minor
          - major
        default: auto

env:
  PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  OKTETO_REGISTRY: registry.cloud.okteto.net
  OKTETO_DEV_IMAGE_TAG: registry.cloud.okteto.net/gotreasa/gotreasa-berlin-clock-gotreasa-berlin-clock:build

jobs:
  release:
    name: Release a new version
    runs-on: ubuntu-latest
    steps:
      - name: Check ref
        run: echo 'The ref is ${{ github.sha }}'
      - name: Wait for pipeline checks to succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.sha }}
          running-workflow-name: 'Release a new version'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Check out the repo
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Setup Node version
        uses: actions/setup-node@main
        with:
          node-version: 18.16
          cache: 'npm'
      - name: Install the dependencies
        run: |
          npm ci
          touch .env
      - name: Log in to Okteto Container Registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.OKTETO_REGISTRY }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.OKTETO_TOKEN }}

      - name: Pull the container image for testing
        run: docker pull ${{ env.OKTETO_DEV_IMAGE_TAG }}

      - name: Install Inspec
        run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec
      - name: Initialise Git user
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: 🚓 Generate SBOM
        run: |
          echo "🔌 Install Anchore/Syft"
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          echo "📁 catalogue the versions inside the container..."
          syft ${{ env.OKTETO_DEV_IMAGE_TAG }} --scope all-layers \
            -o text=/tmp/syft/sbom.txt \
            -o spdx-json=/tmp/syft/sbom.spdx.json \
            -o cyclonedx-json=/tmp/syft/sbom.cyclonedx.json \
            -o json=/tmp/syft/sbom.json \
            -o table=/tmp/syft/sbom.table.txt \
            -o table
      - name: Run release
        env:
          TYPE_ARG: ${{ fromJSON('{"auto":"", "patch":"--patch", "minor":"--minor", "major":"--major"}')[github.event.inputs.type] }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release -- --ci --verbose $TYPE_ARG
      - name: Re-tag the docker image
        run: |
          export NEW_VERSION=$(node -p "require('./package.json').version")
          docker tag ${{ env.OKTETO_DEV_IMAGE_TAG }} registry.cloud.okteto.net/gotreasa/gotreasa-berlin-clock-gotreasa-berlin-clock:${NEW_VERSION}
          docker push registry.cloud.okteto.net/gotreasa/gotreasa-berlin-clock-gotreasa-berlin-clock:${NEW_VERSION}

  can_i_deploy:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: 📂 Checkout the code
        uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: 18.16
          cache: 'npm'
      - name: 🗂️ Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - run: |
          npm ci
          echo "The release version is $(npx absolute-version --tagGlob '[0-9]*')?"
          npm run test:api:consumer
          npm run publish:pact
          export CI=true
          npm run test:api:provider
      - name: Check if it can be deployed
        run: |
          npx pact-broker can-i-deploy --pacticipant berlin_clock_app \
            --version $(npx absolute-version) \
            --participant berlin_clock_client \
            --version $(git rev-parse --short HEAD)-$(git branch \
            --show-current)+$(git rev-parse --short HEAD) \
            --broker-base-url https://gotreasa.pactflow.io \
            --broker-token ${{ secrets.PACT_BROKER_TOKEN }} \
            --to-environment production
          echo "🚂 The Production environment can be deployed"
